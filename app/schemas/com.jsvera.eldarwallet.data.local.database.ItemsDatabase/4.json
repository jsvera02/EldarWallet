{
  "formatVersion": 1,
  "database": {
    "version": 4,
    "identityHash": "7d97b59510b4ead6fc35979c61810378",
    "entities": [
      {
        "tableName": "UserEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `userName` TEXT NOT NULL, `name` TEXT NOT NULL, `lastName` TEXT NOT NULL, `password` TEXT NOT NULL, `balance` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "userName",
            "columnName": "userName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "lastName",
            "columnName": "lastName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "password",
            "columnName": "password",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "balance",
            "columnName": "balance",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "userId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CardEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`cardId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `user_id` INTEGER NOT NULL, `card_number` TEXT NOT NULL, `name` TEXT NOT NULL, `card_holder_name` TEXT NOT NULL, `card_type` TEXT NOT NULL, `expiration_date` TEXT NOT NULL, `dni` TEXT NOT NULL, FOREIGN KEY(`user_id`) REFERENCES `UserEntity`(`userId`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "cardId",
            "columnName": "cardId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "user_id",
            "columnName": "user_id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "card_number",
            "columnName": "card_number",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "card_holder_name",
            "columnName": "card_holder_name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "card_type",
            "columnName": "card_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "expiration_date",
            "columnName": "expiration_date",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "dni",
            "columnName": "dni",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "cardId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "UserEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "user_id"
            ],
            "referencedColumns": [
              "userId"
            ]
          }
        ]
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '7d97b59510b4ead6fc35979c61810378')"
    ]
  }
}